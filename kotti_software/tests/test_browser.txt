kotti_software browser tests
========================

Setup and Login
---------------

  >>> import datetime
  >>> from dateutil.tz import tzutc
  >>> from kotti import tests
  >>> first_time_string = "2012-07-31 05:00:00"
  >>> first_date = datetime.datetime(2012, 7, 31, 5, 0, 0, tzinfo=tzutc())
  >>> second_time_string = "2012-07-31 06:00:00"
  >>> second_date = datetime.datetime(2012, 7, 31, 6, 0, 0, tzinfo=tzutc())
  >>> third_time_string = "2012-10-04 06:00:00"
  >>> third_date = datetime.datetime(2012, 10, 4, 6, 0, 0, tzinfo=tzutc())
  >>> def dc(content, name='/tmp/out.html'): open(name, 'w').write(content)
  >>> tools = tests.setUpFunctional(
  ...     **{'kotti.configurators': 'kotti_software.kotti_configure'})
  >>> browser = tools['Browser']()
  >>> ctrl = browser.getControl

  >>> browser.open(tests.BASE_URL + '/@@login')
  >>> "Log in" in browser.contents
  True
  >>> ctrl("Username or email").value = "admin"
  >>> ctrl("Password").value = "secret"
  >>> ctrl(name="submit").click()
  >>> "Welcome, Administrator" in browser.contents
  True

Add a software collection 
-------------------------

  >>> browser.open(tests.BASE_URL + '/@@add_softwarecollection')
  >>> ctrl("Title").value = "New Software Collection"
  >>> ctrl("Body").value = "This is the new software collection"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True
  >>> browser.url == tests.BASE_URL + '/new-software-collection/'
  True

Add softwareprojects
--------------------

  >>> browser.open(tests.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "First software project"
  >>> ctrl("Body").value = "This project concerns throwing dice..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = first_time_string
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

  >>> browser.open(tests.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "Second software project"
  >>> ctrl("Body").value = "This project is about hurricanes..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = second_time_string
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True


View software collection and software project
---------------------------------------------

  >>> browser.open(tests.BASE_URL + '/new-software-collection/')
  >>> "First software project" in browser.contents
  True
  >>> "Jul 31, 2012" in browser.contents
  True
  >>> pos = browser.contents.index
  >>> pos("Second software project") < pos("First software project")
  True
  >>> browser.getLink("Second software project").click()
  >>> "This project is about hurricanes" in browser.contents
  True

Add a software project with use_json_date but no json_url
---------------------------------------------------------

  >>> browser.open(tests.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "Third software project"
  >>> ctrl("Body").value = "This project concerns lions and tigers..."
  >>> ctrl("Use date in JSON data").selected = True
  >>> ctrl("JSON URL").value = ""
  >>> ctrl("save").click()
  >>> "Date handling = use_json_date; json_url required" in browser.contents
  True
  >>> "Provide json url for fetching data" in browser.contents
  True

Edit software collection and software project and verify the changes
--------------------------------------------------------------------

  >>> browser.open(tests.BASE_URL + '/new-software-collection/@@edit')
  >>> ctrl("Title").value = "This is the Software Collection"
  >>> ctrl("Body").value = "Hello, I am a software collection"
  >>> ctrl("save").click()

  >>> browser.open(tests.BASE_URL + '/new-software-collection/first-software-project/@@edit')
  >>> ctrl("Title").value = "I was first, but now am an edited project"
  >>> ctrl("Description", index=0).value = "I am an edited software project"
  >>> ctrl("Tags").value = "dice editing"
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = third_time_string
  >>> ctrl("Home Page URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("Docs URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("Download URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("Bugtracker URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("save").click()
  >>> "Your changes have been saved" in browser.contents
  True


Edit a software project to change the json_url, forcing date to blank
---------------------------------------------------------------------

  >>> browser.open(tests.BASE_URL + '/new-software-collection/first-software-project/@@edit')
  >>> ctrl("Use date in JSON data").selected = True
  >>> ctrl("Date", index=1).value = ""
  >>> ctrl("JSON URL").value = "http://pypi.python.org/pypi/Kotti/json"
  >>> ctrl("save").click()

  >>> browser.open(tests.BASE_URL + '/new-software-collection/')
  >>> "Kotti" in browser.contents
  True

Edit a software project with date *and* json_url changed
--------------------------------------------------------

  >>> browser.open(tests.BASE_URL + '/new-software-collection/first-software-project/@@edit')
  >>> ctrl("Title").value = "Edited software project"
  >>> ctrl("Use date in JSON data").selected = True
  >>> ctrl("JSON URL", index=0).value = ""
  >>> ctrl("save").click()
  >>> "Date handling = use_json_date; json_url required" in browser.contents
  True
  >>> "Provide json url for fetching data" in browser.contents
  True

Check the addon is locale aware
-------------------------------

  >>> tools_de = tests.setUpFunctional(
  ...     **{'kotti.configurators': 'kotti_software.kotti_configure',
  ...        'pyramid.default_locale_name': 'de'})
  >>> browser_de = tools_de['Browser']()
  >>> ctrl_de = browser_de.getControl
  >>> browser_de.open(tests.BASE_URL + '/@@login')
  >>> ctrl_de("Benutzername oder E-Mail").value = "admin"
  >>> ctrl_de("Passwort").value = "secret"
  >>> ctrl_de(name="submit").click()

  >>> browser_de.open(tests.BASE_URL + '/@@add_softwarecollection')
  >>> ctrl_de("Titel").value = "Neuer software collection"
  >>> ctrl_de("Inhalt").value = "Das ist der neue software collection"
  >>> ctrl_de(name="save").click()

  >>> browser_de.open(tests.BASE_URL + '/neuer-software-collection/@@add_softwareproject')
  >>> dc(browser.contents)
  >>> ctrl_de("Titel").value = "Erster software project"
  >>> ctrl_de("Inhalt").value = "Also, ich sag mal..."
  >>> ctrl("Verwenden Sie eingegebene Datum").selected = True
  >>> ctrl_de("Date", index=1).value = "2012-07-31 05:00:00"
  >>> ctrl_de(name="save").click()

  >>> "Jul 31, 2012" in browser_de.contents
  False
  >>> "31.07.2012" in browser_de.contents
  True
