kotti_software browser tests
========================

Setup and Login
---------------

  >>> import datetime
  >>> from dateutil.tz import tzutc
  >>> from kotti import testing
  >>> first_time_string = "2012-07-31 05:00:00"
  >>> first_date = datetime.datetime(2012, 7, 31, 5, 0, 0, tzinfo=tzutc())
  >>> second_time_string = "2012-07-31 06:00:00"
  >>> second_date = datetime.datetime(2012, 7, 31, 6, 0, 0, tzinfo=tzutc())
  >>> third_time_string = "2012-10-04 06:00:00"
  >>> third_date = datetime.datetime(2012, 10, 4, 6, 0, 0, tzinfo=tzutc())
  >>> sixth_time_string = "2012-10-07 06:00:00"
  >>> sixth_date = datetime.datetime(2012, 10, 7, 6, 0, 0, tzinfo=tzutc())
  >>> eighth_time_string = "2012-10-07 06:00:00"
  >>> eighth_date = datetime.datetime(2012, 10, 7, 6, 0, 0, tzinfo=tzutc())
  >>> def dc(content, name='/tmp/out.html'): open(name, 'w').write(content)
  >>> tools = testing.setUpFunctional(
  ...     **{'kotti.configurators': 'kotti_software.kotti_configure'})
  >>> browser = tools['Browser']()
  >>> ctrl = browser.getControl

  >>> browser.open(testing.BASE_URL + '/@@login')
  >>> "Log in" in browser.contents
  True
  >>> ctrl("Username or email").value = "admin"
  >>> ctrl("Password").value = "secret"
  >>> ctrl(name="submit").click()
  >>> "Welcome, Administrator" in browser.contents
  True

Add a software collection 
-------------------------

  >>> browser.open(testing.BASE_URL + '/@@add_softwarecollection')
  >>> ctrl("Title").value = "New Software Collection"
  >>> ctrl("Body").value = "This is the new software collection"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True
  >>> browser.url == testing.BASE_URL + '/new-software-collection/'
  True

Add softwareprojects
--------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "First software project"
  >>> ctrl("Body").value = "This project concerns throwing dice..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = first_time_string
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "Second software project"
  >>> ctrl("Body").value = "This project is about hurricanes..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = second_time_string
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

Add a software project using pypi source
----------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "kotti_software"
  >>> ctrl("Body").value = "This project is about this very project..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_software/json"
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = "kotti_software"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

Add a software project with GitHub owner but not repo
-----------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "kotti_software"
  >>> ctrl("Body").value = "This project is about this very project..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_software/json"
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = ""
  >>> ctrl("save").click()
  >>> "To specifiy a GitHub repo, both owner and repo required" in browser.contents
  True
  >>> "Provide GitHub repo for api call" in browser.contents
  True

Add a software project with GitHub repo but not owner
-----------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "kotti_software"
  >>> ctrl("Body").value = "This project is about this very project..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_software/json"
  >>> ctrl("GitHub Owner").value = ""
  >>> ctrl("GitHub Repo").value = "kotti_software"
  >>> ctrl("save").click()
  >>> "To specifiy a GitHub repo, both owner and repo required" in browser.contents
  True
  >>> "Provide GitHub owner for api call" in browser.contents
  True

Add a software project with Bitbucket owner but not repo
--------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "kotti_software"
  >>> ctrl("Body").value = "This project is about this very project..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_software/json"
  >>> ctrl("Bitbucket Owner").value = "geojeff"
  >>> ctrl("Bitbucket Repo").value = ""
  >>> ctrl("save").click()
  >>> "To specifiy a Bitbucket repo, both owner and repo required" in browser.contents
  True
  >>> "Provide Bitbucket repo for api call" in browser.contents
  True

Add a software project with Bitbucket repo but not owner
--------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "kotti_software"
  >>> ctrl("Body").value = "This project is about this very project..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_software/json"
  >>> ctrl("Bitbucket Owner").value = ""
  >>> ctrl("Bitbucket Repo").value = "kotti_software"
  >>> ctrl("save").click()
  >>> "To specifiy a Bitbucket repo, both owner and repo required" in browser.contents
  True
  >>> "Provide Bitbucket owner for api call" in browser.contents
  True

View software collection and software project
---------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/')
  >>> "First software project" in browser.contents
  True
  >>> "Jul 31, 2012" in browser.contents
  True
  >>> pos = browser.contents.index
  >>> pos("Second software project") < pos("First software project")
  True
  >>> browser.getLink("Second software project").click()
  >>> "This project is about hurricanes" in browser.contents
  True

Add a software project with use_pypi_date but no pypi_url
---------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "Third software project"
  >>> ctrl("Body").value = "This project concerns lions and tigers..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from PyPI, PyPI url required" in browser.contents
  True
  >>> "Provide PyPI url for fetching data" in browser.contents
  True

Add a software project with desc to come from pypi, but no pypi_url
-------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "Fourth software project"
  >>> ctrl("Body").value = "This project concerns cavemen and alligators..."
  >>> ctrl("Use description in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from PyPI, PyPI url required" in browser.contents
  True
  >>> "Provide PyPI url for fetching data" in browser.contents
  True

Add a software project with use_github_date but no GitHub owner, repo
---------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "Fifth software project"
  >>> ctrl("Body").value = "This project concerns aardvarks and armadillos..."
  >>> ctrl("Use date in GitHub data").selected = True
  >>> ctrl("GitHub Owner").value = ""
  >>> ctrl("GitHub Repo").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from GitHub, owner and repo required" in browser.contents
  True
  >>> "Provide GitHub owner for api call" in browser.contents
  True
  >>> "Provide GitHub repo for api call" in browser.contents
  True

Add a software project with desc to come from GitHub, but no GitHub owner, repo
-------------------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "Sixth software project"
  >>> ctrl("Body").value = "This project concerns architects and lawyers..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = sixth_time_string
  >>> ctrl("Use description in GitHub data").selected = True
  >>> ctrl("GitHub Owner").value = ""
  >>> ctrl("GitHub Repo").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from GitHub, owner and repo required" in browser.contents
  True
  >>> "Provide GitHub owner for api call" in browser.contents
  True
  >>> "Provide GitHub repo for api call" in browser.contents
  True

Add a software project with use_bitbucket_date but no Bitbucket owner, repo
---------------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "Seventh software project"
  >>> ctrl("Body").value = "This project concerns lizards and frogs..."
  >>> ctrl("Use date in Bitbucket data").selected = True
  >>> ctrl("Bitbucket Owner").value = ""
  >>> ctrl("Bitbucket Repo").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from Bitbucket, owner and repo required" in browser.contents
  True
  >>> "Provide Bitbucket owner for api call" in browser.contents
  True
  >>> "Provide Bitbucket repo for api call" in browser.contents
  True

Add a software project with desc to come from Bitbucket, but no Bitbucket owner, repo
-------------------------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "Eighth software project"
  >>> ctrl("Body").value = "This project concerns dogs and cats..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = eighth_time_string
  >>> ctrl("Use description in Bitbucket data").selected = True
  >>> ctrl("Bitbucket Owner").value = ""
  >>> ctrl("Bitbucket Repo").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from Bitbucket, owner and repo required" in browser.contents
  True
  >>> "Provide Bitbucket owner for api call" in browser.contents
  True
  >>> "Provide Bitbucket repo for api call" in browser.contents
  True

Edit software collection and software project and verify the changes
--------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/@@edit')
  >>> ctrl("Title").value = "This is the Software Collection"
  >>> ctrl("Body").value = "Hello, I am a software collection"
  >>> ctrl("save").click()

  >>> browser.open(testing.BASE_URL + '/new-software-collection/first-software-project/@@edit')
  >>> ctrl("Title").value = "I was first, but now am an edited project"
  >>> ctrl("Description", index=0).value = "I am an edited software project"
  >>> ctrl("Tags").value = "dice editing"
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = third_time_string
  >>> ctrl("Home Page URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("Docs URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("Download URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("Bugtracker URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("save").click()
  >>> "Your changes have been saved" in browser.contents
  True

Edit a software project to change the pypi_url, forcing date to blank
---------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/first-software-project/@@edit')
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("Date", index=1).value = ""
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/Kotti/json"
  >>> ctrl("save").click()

  >>> browser.open(testing.BASE_URL + '/new-software-collection/')
  >>> "Kotti" in browser.contents
  True

Edit a software project with date *and* pypi_url changed
--------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/first-software-project/@@edit')
  >>> ctrl("Title").value = "Edited software project"
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL", index=0).value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from PyPI, PyPI url required" in browser.contents
  True
  >>> "Provide PyPI url for fetching data" in browser.contents
  True

Edit a software project with GitHub owner and repo changed
----------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/kotti_software/@@edit')
  >>> ctrl("Title").value = "kotti_media"
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = "kotti_media"
  >>> ctrl("save").click()
  >>> "kotti_media" in browser.contents
  True

Edit a software project with Bitbucket owner and repo changed
-------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-software-collection/kotti_software/@@edit')
  >>> ctrl("Title").value = "sphinx"
  >>> ctrl("Bitbucket Owner").value = "birkenfeld"
  >>> ctrl("Bitbucket Repo").value = "sphinx"
  >>> ctrl("save").click()
  >>> "sphinx" in browser.contents
  True

Add a software collection with sorting changed
----------------------------------------------

  >>> browser.open(testing.BASE_URL + '/@@add_softwarecollection')
  >>> ctrl("Title").value = "Ordered GitHub Software Collection"
  >>> ctrl("Body").value = "This software collection is GitHub only, ascending sorted"
  >>> ctrl("Ascending").selected = True
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True
  >>> browser.url == testing.BASE_URL + '/ordered-github-software-collection/'
  True

Add GitHub software projects and one dated NOW; Test for ascending order
------------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/ordered-github-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "GitHub kotti_software"
  >>> ctrl("Body").value = "This project is about this very project on GitHub..."
  >>> ctrl("Use date in GitHub data").selected = True
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = "kotti_software"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

  >>> browser.open(testing.BASE_URL + '/ordered-github-software-collection/@@add_softwareproject')
  >>> ctrl("Title").value = "GitHub Kotti geojeff fork"
  >>> ctrl("Body").value = "This project is about Kotti forked on geojeff GitHub..."
  >>> ctrl("Use date in GitHub data").selected = True
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = "Kotti"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

  >>> browser.open(testing.BASE_URL + '/ordered-github-software-collection/')
  >>> "GitHub Kotti geojeff fork" in browser.contents
  True
  >>> "GitHub kotti_software" in browser.contents
  True
  >>> pos = browser.contents.index
  >>> pos("GitHub Kotti geojeff fork") > pos("GitHub kotti_software")
  True

Edit the ordered software collection to reverse sorting
-------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/ordered-github-software-collection/@@edit')
  >>> ctrl("Title").value = "I was descending, but now am ascending"
  >>> ctrl("Description").value = "I was descending, but now am ascending"
  >>> ctrl("Tags").value = "sorting order lists"
  >>> ctrl("Ascending").selected = True
  >>> ctrl("Descending").selected = False
  >>> ctrl("save").click()
  >>> "I was descending, but now am ascending" in browser.contents
  True
  >>> pos = browser.contents.index
  >>> pos("kotti_software dated NOW") > pos("GitHub kotti_software")
  True
  >>> pos("kotti_software dated NOW") > pos("GitHub Kotti geojeff fork")
  True
